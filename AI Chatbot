import os

import streamlit as st
from dotenv import load_dotenv
import google.generativeai as gen_ai





load_dotenv()


st.set_page_config(
    page_title="Chat with Little Python",
    page_icon=":ðŸ’»:",
    layout="centered",
)

GOOGLE_API_KEY = os.getenv("AIzaSyAEOcFDS5szZIGvlXO1PQCNE5wuxEt2IBs")


gen_ai.configure(api_key="AIzaSyAEOcFDS5szZIGvlXO1PQCNE5wuxEt2IBs")
model = gen_ai.GenerativeModel('gemini-pro')



def translate_role_for_streamlit(user_role):
    if user_role == "model":
        return "assistant"
    else:
        return user_role



if "chat_session" not in st.session_state:
    st.session_state.chat_session = model.start_chat(history=[])



st.title("ðŸ¤–Little Python \r\n By Advaith Varrier")




for message in st.session_state.chat_session.history:
    with st.chat_message(translate_role_for_streamlit(message.role)):
        st.markdown(message.parts[0].text)

# Input field for user's message
user_prompt = st.chat_input("Ask Little Python...")
if user_prompt:
    # Add user's message to chat and display it
    st.chat_message("user").markdown(user_prompt)

    # Send user's message to Gemini-Pro and get the response
    gemini_response = st.session_state.chat_session.send_message(user_prompt)

    # Display Gemini-Pro's response
    with st.chat_message("assistant"):
        st.markdown(gemini_response.text)

